getCoef(rowData(pe[["protein"]])$msqrobModels[[1]])
L <- makeContrast("(Intercept)genotypeD8 - (Intercept)genotypeWT=0", parameterNames = c("(Intercept)genotypeWT", "(Intercept)genotypeD8"))
L <- makeContrast("\(Intercept\)genotypeD8 - \(Intercept\)genotypeWT=0", parameterNames = c("\(Intercept\)genotypeWT", "\(Intercept\)genotypeD8"))
"\(Intercept\)genotypeD8 - \(Intercept\)genotypeWT=0"
L <- makeContrast("\\(Intercept\\)genotypeD8 - \\(Intercept\\)genotypeWT=0", parameterNames = c("\\(Intercept\\)genotypeWT", "\\(Intercept\\)genotypeD8"))
makeContrast("\\(Intercept\\)genotypeD8 - \\(Intercept\\)genotypeWT=0", parameterNames = c("\\(Intercept\\)genotypeWT", "\\(Intercept\\)genotypeD8"))
L <- makeContrast("(Intercept)genotypeD8 - (Intercept)genotypeWT=0", parameterNames = c("(Intercept)genotypeWT", "(Intercept)genotypeD8"))
makeContrast("(Intercept)=0",parameterNames=c("(Intercept)")
)
makeContrast("(Intercept)genotype=0",parameterNames=c("(Intercept)genotype"))
?makeContrast
makeContrast
.chrlinfct2matrix
msqrob2::.chrlinfct2matrix
msqrob2:::.chrlinfct2matrix
L <- makeContrast("genotypeD8 - genotypeWT=0", parameterNames = c("genotypeWT", "genotypeD8"))
pe <- hypothesisTest(object = pe, i = "protein", contrast = L)
L
pe[["protein"]]
rowData(pe[["protein"]]) %>% names
rowData(pe[["protein"]])$genotype
rowData(pe[["protein"]])[[11]]
rowData(pe[["protein"]])[[11]] %>% na.exclude
L
rownames(L)<-paste0("(Intercept)",rownames(L))
L
pe <- hypothesisTest(object = pe, i = "protein", contrast = L)
pe <- hypothesisTest(object = pe, i = "protein", contrast = L,overwrite=TRUE)
rowData(pe[["protein"]])[[11]]
rowData(pe[["protein"]])$`genotypeD8 - genotypeWT`
volcano <- ggplot(rowData(pe[["protein"]])$`genotypeD8 - genotypeWT`,
aes(x = logFC, y = -log10(pval), color = adjPval < 0.05)) +
geom_point(cex = 2.5) +
scale_color_manual(values = alpha(c("black", "red"), 0.5)) + theme_minimal()
volcano
sum(rowData(pe[["protein"]])$`genotypeD8 - genotypeWT`$adjPval < 0.05, na.rm = TRUE)
sigNames <- rowData(pe[["protein"]])$`genotypeD8 - genotypeWT` %>%
rownames_to_column("protein") %>%
filter(adjPval<0.05) %>%
pull(protein)
heatmap(assay(pe[["protein"]])[sigNames, ])
maxPlot <- 10
for (protName in sigNames[1:maxPlot])
{
pePlot <- pe[protName, , c("peptideNorm","protein")]
pePlotDf <- data.frame(longFormat(pePlot))
pePlotDf$assay <- factor(pePlotDf$assay,
levels = c("peptideNorm", "protein"))
pePlotDf$condition <- as.factor(colData(pePlot)[pePlotDf$colname, "condition"])
# plotting
p1 <- ggplot(data = pePlotDf,
aes(x = colname, y = value, group = rowname)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle = 70, hjust = 1, vjust = 0.5)) +
facet_grid(~assay) +
ggtitle(protName)
print(p1)
# plotting 2
p2 <- ggplot(pePlotDf, aes(x = colname, y = value, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(
position = position_jitter(width = .1),
aes(shape = rowname)) +
scale_shape_manual(values = 1:nrow(pePlotDf)) +
labs(title = protName, x = "sample", y = "peptide intensity (log2)") +
theme(axis.text.x = element_text(angle = 70, hjust = 1, vjust = 0.5)) +
facet_grid(~assay)
print(p2)
}
maxPlot <- 10
for (protName in sigNames[1:maxPlot])
{
pePlot <- pe[protName, , c("peptideNorm","protein")]
pePlotDf <- data.frame(longFormat(pePlot))
pePlotDf$assay <- factor(pePlotDf$assay,
levels = c("peptideNorm", "protein"))
pePlotDf$condition <- as.factor(colData(pePlot)[pePlotDf$colname, "genotype"])
# plotting
p1 <- ggplot(data = pePlotDf,
aes(x = colname, y = value, group = rowname)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle = 70, hjust = 1, vjust = 0.5)) +
facet_grid(~assay) +
ggtitle(protName)
print(p1)
# plotting 2
p2 <- ggplot(pePlotDf, aes(x = colname, y = value, fill = condition)) +
geom_boxplot(outlier.shape = NA) +
geom_point(
position = position_jitter(width = .1),
aes(shape = rowname)) +
scale_shape_manual(values = 1:nrow(pePlotDf)) +
labs(title = protName, x = "sample", y = "peptide intensity (log2)") +
theme(axis.text.x = element_text(angle = 70, hjust = 1, vjust = 0.5)) +
facet_grid(~assay)
print(p2)
}
sum(rowData(pe[["protein"]])$`genotypeD8 - genotypeWT`$adjPval < 0.05, na.rm = TRUE)
sum(rowData(pe[["protein"]])$`genotypeD8 - genotypeWT`$adjPval < 0.05, na.rm = TRUE)
sum(rowData(pe[["protein"]])[,`genotypeD8 - genotypeWT`][,`adjPval`] < 0.05, na.rm = TRUE)
sum(rowData(pe[["protein"]])[[`genotypeD8 - genotypeWT`]][[`adjPval`]] < 0.05, na.rm = TRUE)
rowData(pe[["protein"]])
rowData(pe[["protein"]]) %>% names
rowData(pe[["protein"]])[["genotypeD8 - genotypeWT"]] %>% head
rowData(pe[["protein"]])[["genotypeD8 - genotypeWT"]][[`adjPval`]]
sum(rowData(pe[["protein"]])[["genotypeD8 - genotypeWT"]][["adjPval"]]
rowData(pe[["protein"]])[["genotypeD8 - genotypeWT"]][[`adjPval`]] %>% head
rowData(pe[["protein"]])[["genotypeD8 - genotypeWT"]][,"adjPval"]
?`normalize,QFeatures-method`
library(msqrob2gui)
launchMsqrob2App()
launchMsqrob2App()
launchMsqrob2App()
library("msqrob2gui")
launchMsqrob2App()
launchMsqrob2App()
launchMsqrob2App()
launchMsqrob2App()
knitr::include_graphics("https://raw.githubusercontent.com/statOmics/biostatistics21/master/figs/fevMeasurement.jpg")
knitr::include_graphics("https://raw.githubusercontent.com/statOmics/biostatistics21/master/figs/fevMeasurement.jpg")
knitr::opts_chunk$set(echo = TRUE)
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4)))
s.factor(c(rep("treat",8),rep("ctrl",4))
as.factor(c(rep("treat",8),rep("ctrl",4))
)
group=as.factor(c(rep("treat",8),rep("ctrl",4)))
knitr::opts_chunk$set(echo = TRUE)
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
knitr::opts_chunk$set(echo = TRUE)
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.symbol=FALSE) +
geom_jitter
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.symbol=FALSE) +
geom_jitter
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.symbol=FALSE) +
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.symbol=FALSE) +
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.symbol=FALSE) +
geom_jitter()
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.symbol=FALSE) +
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.shape =FALSE) +
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.shape =FALSE) +
geom_jitter()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.shape =FALSE) +
geom_jitter()
rodent %>%
ggplot(aes(sample = weight)) +
geom_qq() +
geom_line()
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
rodent <- data.frame(weight=c(11,33,48,34,112,369,64,44,177,80,141,332),group=as.factor(c(rep("treat",8),rep("ctrl",4))))
rodent %>%
ggplot(aes(group,weight)) +
geom_boxplot(outlier.shape =FALSE) +
geom_jitter()
rodent %>%
ggplot(aes(sample = weight)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~group)
rodent %>% wilcox.test(weight~group)
wilcox.test(weight~group,rodent)
27/4/12
27/4/10
library(ggplot2)
library(dplyr)
#install.packages("tidyr")
library(tidyr)
wbcon <- read.table("https://raw.githubusercontent.com/statOmics/statistiekBasisCursusData/master/practicum3/wbcon.dat", header = TRUE)
mean_0 <- wbcon %>% filter(groep==0)  %>% pull(WBC)  %>% mean()
mean_1 <- wbcon %>% filter(groep==1)  %>% pull(WBC)  %>% mean()
mean_0
mean_1
wbSum <- wbcon %>%
group_by(groep) %>%
summarize_at("WBC",
list(mean=~mean(.,na.rm=TRUE),
sd=~sd(.,na.rm=TRUE),
n=function(x) x%>%is.na%>%`!`%>%sum)
) %>%
mutate(se = sd/sqrt(n))
weSum
wbSum
wbcon$groep <- as.factor(wbcon$groep) # groep is integer, we willen een factor
boxplot <- ggplot(data=wbcon,aes(x=groep, y=WBC, col=groep)) +
geom_boxplot() +
geom_jitter() +
theme_bw() +
ggtitle("Concentratie witte bloedcellen")
boxplot
qqplot <- wbcon %>%
ggplot(aes(sample=WBC)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~groep)
qqplot <- wbcon %>%
ggplot(aes(sample=WBC)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~groep)
qqplot
t.test(WBC ~ groep)
t.test(WBC ~ groep,wbcon)
wbSum
diff(wbSum$mean)
wbSum %>% pull(mean) %>% diff
round(t.test(groep_1$WBC,groep_0$WBC)$conf.int[1],2)
groep_1$WBC,groep_0$WBC)$conf.int %>% round(2)
grround(test$p.value,2)id=seq(0,1.3,.01)
round(test$p.value,2)
test <- t.test(WBC ~ groep,wbcon)
test
test$p.value
round(test$p.value,2)
format(test$p,digits=2)
format(test$p)
format(test$p.value,digits=2)
format(test$p.value,digits=2)
test$conf.int %>% round(2)
print(test$conf.int %>% round(0))
wbSum %>% pull(mean) %>% diff %>% round(0)
ggplot(subset(ACTG175,treat==0),aes(sample=log(cd420)))
+geom_qq() + geom_qq_line()
boxplot <- ggplot(data=wbcon,aes(x=groep, y=WBC, col=groep)) +
geom_boxplot(outlier.shape=NA) +
geom_jitter() +
theme_bw() +
ggtitle("Concentratie witte bloedcellen")
boxplot <- ggplot(data=wbcon,aes(x=groep, y=log2(WBC), col=groep)) +
geom_boxplot(outlier.shape=NA) +
geom_jitter() +
theme_bw() +
ggtitle("Concentratie witte bloedcellen")
boxplot
boxplot <- ggplot(data=wbcon,aes(x=groep, y=WBC, col=groep)) +
geom_boxplot(outlier.shape=NA) +
geom_jitter() +
theme_bw() +
ggtitle("Concentratie witte bloedcellen")
boxplot
boxplot <- ggplot(data=koekoek,aes(x=soort, y=lengte, col=soort)) +
geom_boxplot() +
geom_jitter() +
theme_bw() +
ggtitle("Lengte van de koekoekseieren (in mm) per soort")
library(ggplot2)
library(dplyr)
#install.packages("tidyr")
library(tidyr)
#install.packages("multcomp")
library(multcomp)
koekoek<-read.table("https://raw.githubusercontent.com/statOmics/statistiekBasisCursusData/master/practicum5/koekoek.txt",header=TRUE)
head(koekoek)
count <- koekoek %>% count(soort)
count
koekoek %>% ggplot(aes(x = soort)) + geom_bar(fill = "steelblue")
koekoek$soort <- as.factor(koekoek$soort)
boxplot <- ggplot(data=koekoek,aes(x=soort, y=lengte, col=soort)) +
geom_boxplot() +
geom_jitter() +
theme_bw() +
ggtitle("Lengte van de koekoekseieren per soort")
boxplot
koekoek$soort <- as.factor(koekoek$soort)
boxplot <- ggplot(data=koekoek,aes(x=soort, y=lengte, col=soort)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter() +
theme_bw() +
ggtitle("Lengte van de koekoekseieren per soort")
boxplot
boxplot <- ggplot(data=koekoek,aes(x=soort, y=lengte, col=soort)) +
geom_boxplot() +
geom_jitter() +
theme_bw() +
ggtitle("Lengte van de koekoekseieren (in mm) per soort")
boxplot
boxplot
koekoek %>% lm(length~soort) %>% sigma
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(length~soort,data=koekoek) %>% sigma
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(lengte~soort,data=koekoek) %>% sigma
means<- koekoek %>% group_by(soort) %>% summarise(m=mean(lengte))
means$m
for(i in 1:9){
a<-rnorm(45, mean=means$m[1], sd=sd1)
b<-rnorm(15, mean=means$m[2], sd=sd1)
c<-rnorm(14, mean=means$m[3], sd=sd1)
d<-rnorm(16, mean=means$m[4], sd=sd1)
e<-rnorm(15, mean=means$m[5], sd=sd1)
f<-rnorm(15, mean=means$m[6], sd=sd1)
boxplot(a,b,c,d,e,f)
}
count
means
?rep
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(lengte~soort,data=koekoek) %>% sigma
means<- koekoek %>% group_by(soort) %>% summarise(m=mean(lengte))
nobs <-koekoek %>% count(soort)
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(soort,y)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter()
}, means=means,nobs=nobs,sd=sd1)
plotList
grid.arrange(plotList,3,3)
library(gridExtra)
grid.arrange(plotList,3,3)
?grid.arrange
marrangeGrob(plotList,nrow=3,ncol=3)
length(plotList)
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(lengte~soort,data=koekoek) %>% sigma
means<- koekoek %>% group_by(soort) %>% summarise(m=mean(lengte))
nobs <-koekoek %>% count(soort)
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(soort,y)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter()
}, means=means,nobs=nobs,sd=sd1)
marrangeGrob(plotList,nrow=3,ncol=3)
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(lengte~soort,data=koekoek) %>% sigma
means<- koekoek %>% group_by(soort) %>% summarise(m=mean(lengte))
nobs <-koekoek %>% count(soort)
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(soort,y)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter()
}, means=means,nobs=nobs,sd=sd1)
marrangeGrob(plotList,nrow=3,ncol=3)
arrangeGrob(plotList,nrow=3,ncol=3)
grid.arrange(plotList,nrow=3,ncol=3)
grid.arrange(gList(plotList),nrow=3,ncol=3)
grid.arrange(plotList,nrow=3,ncol=3)
?griddo.call("grid.arrange",c(plotList,nrow=3,ncol=3))
do.call("grid.arrange",c(plotList,nrow=3,ncol=3))
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(lengte~soort,data=koekoek) %>% sigma
means<- koekoek %>% group_by(soort) %>% summarise(m=mean(lengte))
nobs <-koekoek %>% count(soort)
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(soort,y)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter()
}, means=means,nobs=nobs,sd=sd1)
do.call("grid.arrange",c(plotList,nrow=3,ncol=3))
set.seed(52)
par(mfrow=c(3,3), mar=c(3,2,1,1))
sd1<- lm(lengte~soort,data=koekoek) %>% sigma
means<- koekoek %>% group_by(soort) %>% summarise(m=mean(lengte))
nobs <-koekoek %>% count(soort)
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(soort,y)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter()
}, means=means,nobs=nobs,sd=sd1)
do.call("grid.arrange",c(plotList,nrow=3,ncol=3))
# Maak QQ-plot voor de lengte van de koekoekseieren per soort
plot_qq <- koekoek %>% ggplot(aes(sample = lengte)) +
geom_qq() + # qq-punten
geom_qq_line() + # qq-lijn
theme_bw() +
facet_wrap(~soort)
plot_qq
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(sample=y)) +
geom_qq() + # qq-punten
geom_qq_line() + # qq-lijn
theme_bw() +
facet_wrap(~soort)
}, means=means,nobs=nobs,sd=sd1)
plotList
plotList <- lapply(1:9, function(x,means,sd,nobs)
{
data.frame(y = rnorm(
sum(nobs$n),
mean=rep(means$m,times=nobs$n),
sd=sd),
soort =  rep(nobs$soort,times=nobs$n)
) %>%
ggplot(aes(sample=y)) +
geom_qq() + # qq-punten
geom_qq_line() + # qq-lijn
theme_bw() +
facet_wrap(~soort)
}, means=means,nobs=nobs,sd=sd1)
plotList
par(mfrow=c(2,2))
plot(m) # Enkel figuur rechts boven is relevant
par(mfrow=c(2,2))
plot(m) # Enkel figuur rechts boven is relevant
m <- lm(lengte~soort, data = koekoek)
summary(m)
par(mfrow=c(2,2))
plot(m) # Enkel figuur rechts boven is relevant
par(mfrow=c(1,1))
0.05*15
library(multcomp)
mcp <- glht(m,linfct=mcp(soort="Tukey"))
summary(mcp)
library(multcomp)
mcp <- glht(m,linfct=mcp(soort="Tukey"))
summary(mcp)
plot(mcp)
library(multcomp)
mcp <- glht(m,linfct=mcp(soort="Tukey"))
summary(mcp)
confint(mcp)
plot(mcp)
boxplot
renv::install(gridExtra)
renv::install("gridExtra")
renv::snapshot()
setwd("~/Dropbox/statOmics/biostatistics21")
renv::install("gridExtra")
renv::snapshot()
q()
